
"""
Django settings for estore project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path
import os
import environ
import cloudinary

env = environ.Env(
  DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('secret_key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('debug')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "django_browser_reload",

    "macrotech",
    'django_ckeditor_5',

    'django_use_email_as_username.apps.DjangoUseEmailAsUsernameConfig',
    'custom_user.apps.CustomUserConfig',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

ROOT_URLCONF = "estore.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",

                "macrotech.cart.context_processors.cart_count",
            ],
        },
    },
]

WSGI_APPLICATION = "estore.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": env('db_name'),
#         "USER": env('db_user'),
#         "PASSWORD": env('db_password'),
#         "HOST": env('db_host'),
#         "PORT": env('db_port'),
#     }
# }

# Test Prod Database
DATABASES = {
  "default": {
    "ENGINE": "django.db.backends.sqlite3",
    "NAME": BASE_DIR / "test_prod_db.sqlite3"
  }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Africa/Nairobi"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = 'custom_user.User'

# Email config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'jobmunyoki59@gmail.com'
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASS')
ADMIN_EMAIL = 'munyoki912@gmail.com'
EMAIL_SENDER = 'jobmunyoki59@gmail.com'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# cloudinary config
CLOUDINARY_CONFIG = {
    'cloud_name': 'dhzhrymxv',
    'api_secret': env('CLOUDINARY_API_SECRET'),
    'api_key': env('CLOUDINARY_API_KEY'),
    'secure': True
}

cloudinary.config(**CLOUDINARY_CONFIG)
PUBLIC_ID = 'logo_ppwe8v'


# Ckeditor config
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': {
            'items': [
                'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', 'link',
                'bulletedList', 'numberedList', 'todoList', 'blockQuote', 'imageUpload',
                '|', 'codeBlock', 'sourceEditing', 'insertImage', 'mediaEmbed', 'insertTable',
                '|', 'undo', 'redo', 'removeFormat', 'alignment', 'fontSize', 'fontFamily',
                'fontColor', 'fontBackgroundColor', 'highlight', 'horizontalLine',
                'specialCharacters', 'subscript', 'superscript', 'findAndReplace',
                'indent', 'outdent', 'pageBreak', 'exportPdf', 'exportWord', '|',
                'trackChanges', 'comment', 'mention', 'wordCount', 'autosave'
            ],
            'shouldNotGroupWhenFull': True
        }
    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3', '|',
            'bulletedList', 'numberedList', '|', 'blockQuote'
        ],
        'toolbar': {
            'items': [
                'heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link',
                'underline', 'strikethrough', 'code', 'subscript', 'superscript', 'highlight',
                '|', 'codeBlock', 'sourceEditing', 'insertImage', 'bulletedList',
                'numberedList', 'todoList', '|', 'blockQuote', 'imageUpload', '|',
                'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed',
                'removeFormat', 'insertTable', '|', 'undo', 'redo', '|', 'findAndReplace',
                'horizontalLine', 'specialCharacters', 'mention', 'wordCount', 'autosave',
                'alignment', 'pageBreak', 'exportPdf', 'exportWord', '|', 'trackChanges', 'comment'
            ],
            'shouldNotGroupWhenFull': True
        },
        'alignment': {
            'options': ['left', 'right', 'center', 'justify']
        },
        'fontSize': {
            'options': ['tiny', 'small', 'default', 'big', 'huge'],
            'supportAllValues': True
        },
        'fontFamily': {
            'options': ['Arial', 'Courier New', 'Georgia', 'Times New Roman', 'Verdana']
        },
        'fontColor': {
            'columns': 6,
            'documentColors': 12
        },
        'fontBackgroundColor': {
            'columns': 6,
            'documentColors': 12
        },
        'image': {
            'toolbar': [
                'imageTextAlternative', '|', 'imageStyle:alignLeft',
                'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side', '|',
                'imageResize'
            ],
            'styles': ['full', 'side', 'alignLeft', 'alignRight', 'alignCenter'],
            'resizeUnit': 'px'
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells',
                'tableProperties', 'tableCellProperties'
            ]
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1',
                 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2',
                 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3',
                 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        },
        'autosave': {
            'save': "editor => { "
            "localStorage.setItem('editorContent',"
            "editor.getData()); console.log('Content saved to local storage'); }"
        },
        'wordCount': {
            'displayWords': True,
            'displayCharacters': True
        },
        'pasteFromOffice': {
            'enabled': True
        },
        'exportPdf': {
            'stylesheets': [
              'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css']
        },
        'exportWord': {
            'stylesheets': [
              'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css']
        },
        'trackChanges': {
            'enabled': True
        },
        'comment': {
            'enabled': True
        }
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}
